}
if(start[i]>end[i]){
start = start[-i]
}
}
start
i
start[i]
start[i+1]
start = p_start
end = p_end
for(i in 1:length(end)){
if(i>length(start)){
break
}
if(start[i+1]<end[i]){
start = start[-i]
}
if(start[i]>end[i]){
start = start[-i]
}
}
i
p_index_match = function(start,end){
for(i in 1:length(end)){
if((i+1)>length(start)){
break
}
if(start[i+1]<end[i]){
start = start[-i]
}
if(start[i]>end[i]){
start = start[-i]
}
}
data.frame(start,end)
}
p_index_match(p_start,p_end)
start = p_start
end = p_end
for(i in 1:length(end)){
if((i+1)>length(start)){
break
}
if(start[i+1]<end[i]){
start = start[-i]
}
if(start[i]>end[i]){
start = start[-i]
}
}
start
end
start = p_start
end = p_end
start
end
for(i in 1:length(end)){
if((i+1)>length(start)){
break
}
if(start[i+1]<end[i]){
start = start[-i]
}
}
start
end
for(i in 1:length(end)){
if(start[i]>end[i]){
start = start[-i]
}
}
start
start = p_start
end = p_end
for(i in 1:length(end)){
if((i+1)>length(start)){
break
}
if(start[i+1]<end[i]){
start = start[-i]
}
}
start
end
x_lines[28]
x_lines[29]
x_lines[35]
require(xml2)
read_xml('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
read_docx
tmp <- tempfile()
on.exit(unlink(tmp, recursive = TRUE))
file.path(tmp, "word", "document.xml")
utils::unzip(file, exdir = tmp)
utils::unzip('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx', exdir = tmp)
tmp
doc <- xml2::read_xml(xmlfile)
doc <- xml2::read_xml(file.path(tmp, "word", "document.xml"))
doc
#get xml data
xml_find_all(word_tbl$docx,'//w:[')
#get xml data
xml_find_all(word_tbl$docx,'//w:p')
#get xml data
xml_find_all(word_tbl$docx,'//w:p')
xml_find_all(word_tbl$docx,'//w:t')
xml_find_all(word_tbl$docx,'//w:b')
xml_find_all(word_tbl$docx,'w:b')
xml_find_all(word_tbl$docx,'/w:b')
xml_find_all(word_tbl$docx,'//w:b')
sapply(c('dplyr','docxtractr','xml2'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#tables
docx_extract_all(word)
docx_extract_all(word,guess_header = F)
#get xml data
xml_find_all(word_tbl$docx,'//w:p')
#get xml data
xml_find_all(word$docx,'//w:p')
xml_find_all(word$docx,'//w:t')
xml_find_all(word$docx,'//w:b')
#get xml data
txt = xml_find_all(word$docx,'//w:t')
txt
xml_find_chr(word$docx)
xml_find_chr(word$docx,'//w:t')
?xml_find_chr
txt[1]
xml_find_all(word$docx,'//w:p')
xml_find_all(word$docx,'//w:p')[1]
require(XML)
xml_find_all(word$docx,'//w:p')[1] %>% xmlToDataFrame()
word$docx
xmlNode(word$docx)
x = xmlNode(word$docx)
x
x[1]
class(x)
xmlToList(x)
xmlToList(word$docx)
getNodeSet(word$docx,'//w:t')
xmlParse(word$docx)
xmlParseDoc(word$docx)
parsed = xmlParse(word$docx)
parsed
getNodeSet(parsed,'//w:t')
xmlToList(parsed)
xmlValue(parsed)
getNodeSet(parsed,'//w:t') %>% xmlValue()
getNodeSet(parsed,'//w:t')[[1]] %>% xmlValue()
getNodeSet(parsed,'//w:t') %>% sapply(xmlValue)
remove(parsed)
#get bold
xmlParse(word$docx) %>% getNodeSet('//w:b')
xmlParse(word$docx)
#get bold
xmlParse(word$docx) %>% getNodeSet('//w:p')
#get paragraph
xmlParse(word$docx) %>% getNodeSet('//w:p') %>% lapply(xmlValue)
#get txt from xml data
xmlParse(word$docx) %>% getNodeSet('//w:t') %>% sapply(xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% getNodeSet('//w:p') %>% sapply(xmlValue)
xpathSApply(xmlParse(word$docx),'//w:p',xmlValue)
xpathSApply(xmlParse(word$docx),'//w:t',xmlValue)
xmlParse(word$docx) %>%xpathSApply('//w:t',xmlValue)
xmlParse(word$docx) %>% xpathSApply('w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('//w:p[contains(//w:b)]',xmlValue)
xmlParse(word$docx)
xmlParse(word$docx) %>% xpathSApply('/w:p[contains(//w:b)]',xmlValue)
xmlParse(word$docx) %>% xpathSApply('/w:p',xmlValue)
xmlParse(word$docx) %>% getNodeSet('//w:t')
?getNodeSet
docx_extract_all
docx_extract_all_tbls
docx_extract_tbl
xmlParse(word$docx) %>% xpathSApply('./w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:p//w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:t//w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:t//w:t',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:t',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:tr',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:tr/tc',xmlValue)
xmlParse(word$docx) %>% xpathSApply("./w:tr/w:tc",xmlValue)
xmlParse(word$docx) %>% xpathSApply("./w:tr/w:tc",getNodeSet)
xmlParse(word$docx) %>% getNodeSet("./w:tr/w:tc")
xml_find_all(word$docx,'./w:tr/w:tc')
word$docx$node
word$docx$doc
word$docx$tbl
xmlParse(word$docx)
xml_find_all(xmlParse(word$docx) ,'./w:tr/w:tc')
word$docx
xml_find_all(word$docx,'./w:tr/w:tc')
xml_find_all(word$docx,'.//w:tr')
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('.//w:p',xmlValue)
xml_find_all(word$docx,'.//w:p')
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('./w:p',xmlValue)
xml_find_all(word$docx,'.//w:p//w:p')
xml_find_all(word$docx,'./w:p//w:p')
xml_find_all(word$docx,'./w:p')
xml_find_all(word$docx,'.//w:p')
xml_find_all(word$docx,'.//w:p')[1]
xml_find_all(word$docx,'.//w:p')[10]
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:p[contains(//w:b)]',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:p[contains(./w:b)]',xmlValue)
xmlParse(word$docx) %>% xpathSApply('./w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('.//w:p',xmlValue)
xmlParse(word$docx) %>% getNodeSet('//w:p')
#check each paragraph and find style
p = xmlParse(word$docx) %>% getNodeSet('//w:p')
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
remove(p)
paragraph[[1]]
paragraph[[1]] %>% xml_find_all('//w:b')
paragraph[[1]] %>% getNodeSet('//w:b')
paragraph[[1]] %>% xml_find_chr('//w:b')
paragraph[[1]] %>% xml_find_chr('w:b')
paragraph[[1]]
paragraph[[1]] %>% xpathApply('//w:b')
paragraph[[1]]
class(paragraph[[1]])
as.character(paragraph[[1]])
paragraph[[1]]
xmlToList(paragraph[[1]])
xmlToList(paragraph)
xmlValue(paragraph)
xmlValue(paragraph[[1]])
toString(paragraph[[1]])
xmlRoot(paragraph[[1]])
xmlRoot(paragraph[[1]]) %>% as.character()
xmlRoot(paragraph[[1]]) %>% xml_find_all('w:b')
xmlRoot(paragraph[[1]]) %>% xml_find_all('//w:b')
paragraph[[1]]
class(paragraph[[1]])
paragraph[[1]]
grep('w:b/',paragraph[[1]])
print(paragraph[[1]])
as.character(paragraph[[1]])
asXMLNode(paragraph[[1]])
as_xml_document(word$docx)
as_xml_document(paragraph[[1]])
xmlElementsByTagName(xmlParse(word$docx)'p')
xmlElementsByTagName()
?xmlElementsByTagName
xmlElementsByTagName(paragraph[[1]],'p')
xmlElementsByTagName(paragraph[[1]],'w:b')
xmlElementsByTagName(paragraph[[1]],'//w:b')
xmlElementsByTagName(paragraph[[1]],'./w:b')
xmlElementsByTagName(paragraph[[1]],'//w:p')
paragraph[[1]] %>% xpathSApply("//*/frame", saveXML)
saveXML(paragraph[[1]])
saveXML(paragraph[[1]]) %>% grep('//w:b',.)
saveXML(paragraph[[1]]) %>% grep('w:b',.)
saveXML(paragraph[[1]]) %>% grep('w:b/',.)
saveXML(paragraph[[1]]) %>% grep('<w:b/>',.)
sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})
which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)]
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% xmlValue()
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#==========================================================================
# Topic : Word
# Date : 2019. 04.
# Author : Junmo Nam
#==========================================================================
sapply(c('dplyr','docxtractr','xml2'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#==========================================================================
# 1.XML
#==========================================================================
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
sapply(c('dplyr','docxtractr','xml2'.'XML'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
sapply(c('dplyr','docxtractr','xml2','XML'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
#bold style
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
#tables
docx_extract_all(word)
docx_extract_all(word,guess_header = F)
#expected table title
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('w:tr',.)})==1)))]
#expected table title
sapply(paragraph,function(x){saveXML(x) %>% grep('w:tr',.)})==1)
#expected table title
sapply(paragraph,function(x){saveXML(x) %>% grep('w:tr',.)})
#expected table title
xmlParse(word$docx) %>% getNodeSet('//w:tr')
#expected table title
xmlParse(word$docx) %>% getNodeSet('//w:tr./w:tc')
#expected table title
xmlParse(word$docx) %>% getNodeSet('//w:tr/w:tc')
#expected table title
xmlParse(word$docx) %>% getNodeSet('//w:tr')
docx_extract_all_tbls
#expected table title
xmlParse(word$docx) %>% getNodeSet('./w:tr')
#expected table title
n = xmlParse(word$docx) %>% getNodeSet('//w:tr')
n[[1]]
paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#bold in tables
docx_extract_all_tbls(word)
#bold style
bold = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
itc = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
bold
#==========================================================================
# Topic : Word
# Date : 2019. 04.
# Author : Junmo Nam
#==========================================================================
sapply(c('dplyr','docxtractr','xml2','XML'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#==========================================================================
# 1.XML
#==========================================================================
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
#bold style
bold = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
itc = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
bold
#bold in tables
docx_extract_all_tbls(word) %>% lapply(function(x){bold %in% x})
docx_extract_all_tbls(word)
#==========================================================================
# Topic : Word
# Date : 2019. 04.
# Author : Junmo Nam
#==========================================================================
sapply(c('dplyr','docxtractr','xml2','XML'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#==========================================================================
# 1.XML
#==========================================================================
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
#bold style
bold = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
itc = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
#==========================================================================
# 2.Tables
#==========================================================================
#tables
docx_extract_all(word)
docx_extract_all(word,guess_header = F)
#bold in tables
docx_extract_all_tbls(word) %>% lapply(function(x){bold %in% x}) #no bolds
bold
docx_extract_all_tbls(word)[[1]]
grep('aa',docx_extract_all_tbls(word)[[1]])
docx_extract_all_tbls(word) %>% lapply(function(x){bold %in% x})
#bold in tables
sapply(bold,function(x){x %in% docx_extract_all_tbls(word)})
#bold in tables
sapply(bold,function(x){lapply(x %in% docx_extract_all_tbls(word))})
lapply('aa' %in% docx_extract_all_tbls(word))
#bold in tables
sapply(bold,function(x){lapply(x,function(i) i %in% docx_extract_all_tbls(word))})
lapply('aa',function(i) i %in% docx_extract_all_tbls(word))
sapply('aa',function(i) i %in% docx_extract_all_tbls(word))
#tables
tbl = docx_extract_all(word)
#tables
tbl = docx_extract_all_tbls(word)
docx_extract_all_tbls(word,guess_header = F)
#bold in tables
tbl
#bold in tables
sapply(bold,function(x)x %in% tbl)
#bold in tables
sapply(bold,function(x)x %in% tbl[[1]])
bold[1]
bold[5]
bold[5] %in% tbl[[1]]
tbl[[1]]
unlist(tbl[[1]])
#bold in tables
sapply(bold,function(x)x %in% unlist(tbl[[1]]))
tbl
sapply(c('dplyr','docxtractr','XML'),require,character.only = T)
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
#bold style
bold = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
itc = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
#tables
tbl = docx_extract_all_tbls(word)
docx_extract_all_tbls(word,guess_header = F)
tbl
#read docx by line
word = read_docx('C:/Users/jmnam47/Desktop/Blog/post8_Word/example.docx')
word
setwd('C:/Users/jmnam47/Desktop/Blog/post8_Word')
#read docx by line
word = read_docx('/example.docx')
#read docx by line
word = read_docx('example.docx')
word
#read docx by line
word = read_docx('example.docx')
word
word$docx
#parsing
xmlParse(word$docx)
#parsing
xmlParse(word$docx)
#parsing
parsed = xmlParse(word$docx)
View(parsed)
parsed
attributes(parsed)
#parsing
parsed = xmlParse(word$docx)
attributes(parsed)
#get txt from xml data
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt from xml data
xmlParse(word$docx) %>% getNodeSet('//w:t')
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
xmlParse(word$docx) %>% xpathSApply('//w:t',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% xpathSApply('//w:p',xmlValue)
xmlParse(word$docx) %>% xpathSApply('//w:p//w:b',xmlValue)
#get txt by paragraph
xmlParse(word$docx) %>% getNodeSet('//w:p')
#get txt by paragraph
xmlParse(word$docx) %>% getNodeSet('//w:p//w:b')
#check each paragraph and find style
paragraph = xmlParse(word$docx) %>% getNodeSet('//w:p')
#bold style
bold = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:b/>',.)})==1)] %>% sapply(xmlValue)
#italic style
itc = paragraph[which(sapply(paragraph,function(x){saveXML(x) %>% grep('<w:i/>',.)})==1)] %>% sapply(xmlValue)
paragraph
bold
itc
#tables
tbl = docx_extract_all_tbls(word)
tbl
docx_extract_all_tbls(word,guess_header = F)
